{"ast":null,"code":"var _jsxFileName = \"/Users/preston/Desktop/ChristianLove/christian-love/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));\nconst store = Redux.createStore(Redux.combineReducers({\n  todos\n}));\n\nclass ConnectedApp extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Context.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, store => /*#__PURE__*/React.createElement(App, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ConnectedApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n})), document.getElementById('app')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/preston/Desktop/ChristianLove/christian-love/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","store","Redux","createStore","combineReducers","todos","ConnectedApp","Component","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAF,QAAQ,CAACG,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOA,MAAMC,KAAK,GAAGC,KAAK,CAACC,WAAN,CAAkBD,KAAK,CAACE,eAAN,CAAsB;AACpDC,EAAAA;AADoD,CAAtB,CAAlB,CAAd;;AAIA,MAAMC,YAAN,SAA2BZ,KAAK,CAACa,SAAjC,CAA2C;AACzCT,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIG,KAAD,iBACC,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAOD;;AATwC;;AAY3CN,QAAQ,CAACG,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEF,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAJF,E,CAMA;AACA;AACA;;AACAH,aAAa,CAACW,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst store = Redux.createStore(Redux.combineReducers({\n  todos,\n}))\n\nclass ConnectedApp extends React.Component {\n  render() {\n    return (\n      <Context.Consumer>\n        {(store) => (\n          <App store={store} />\n        )}\n      </Context.Consumer>\n    )\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedApp />\n  </Provider>,\n  document.getElementById('app')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}