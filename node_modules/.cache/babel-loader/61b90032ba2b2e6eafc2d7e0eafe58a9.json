{"ast":null,"code":"var _jsxFileName = \"/Users/preston/Desktop/ChristianLove/christian-love/src/index.js\";\nimport React from 'react';\nimport Redux from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // Library Code\n\nfunction createStore(reducer) {\n  // The store should have four parts\n  // 1. The state\n  // 2. Get the state.\n  // 3. Listen to changes on the state.\n  // 4. Update the state\n  let state;\n  let listeners = [];\n\n  const getState = () => state;\n\n  const subscribe = listener => {\n    listeners.push(listener);\n    return () => {\n      listeners = listeners.filter(l => l !== listener);\n    };\n  };\n\n  const dispatch = action => {\n    state = reducer(state, action);\n    listeners.forEach(listener => listener());\n  };\n\n  return {\n    getState,\n    subscribe,\n    dispatch\n  };\n}\n\nconst store = Redux.createStore(Redux.combineReducers({\n  todos\n}));\n\nclass ConnectedApp extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Context.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, store => /*#__PURE__*/React.createElement(App, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ConnectedApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }\n})), document.getElementById('app')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/preston/Desktop/ChristianLove/christian-love/src/index.js"],"names":["React","Redux","ReactDOM","App","serviceWorker","render","document","getElementById","createStore","reducer","state","listeners","getState","subscribe","listener","push","filter","l","dispatch","action","forEach","store","combineReducers","todos","ConnectedApp","Component","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAF,QAAQ,CAACG,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAMA;;AACA,SAASC,WAAT,CAAsBC,OAAtB,EAA+B;AAC7B;AACA;AACA;AACA;AACA;AAEA,MAAIC,KAAJ;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAMC,QAAQ,GAAG,MAAMF,KAAvB;;AAEA,QAAMG,SAAS,GAAIC,QAAD,IAAc;AAC9BH,IAAAA,SAAS,CAACI,IAAV,CAAeD,QAAf;AACA,WAAO,MAAM;AACXH,MAAAA,SAAS,GAAGA,SAAS,CAACK,MAAV,CAAkBC,CAAD,IAAOA,CAAC,KAAKH,QAA9B,CAAZ;AACD,KAFD;AAGD,GALD;;AAOA,QAAMI,QAAQ,GAAIC,MAAD,IAAY;AAC3BT,IAAAA,KAAK,GAAGD,OAAO,CAACC,KAAD,EAAQS,MAAR,CAAf;AACAR,IAAAA,SAAS,CAACS,OAAV,CAAmBN,QAAD,IAAcA,QAAQ,EAAxC;AACD,GAHD;;AAKA,SAAO;AACLF,IAAAA,QADK;AAELC,IAAAA,SAFK;AAGLK,IAAAA;AAHK,GAAP;AAKD;;AACD,MAAMG,KAAK,GAAGpB,KAAK,CAACO,WAAN,CAAkBP,KAAK,CAACqB,eAAN,CAAsB;AACpDC,EAAAA;AADoD,CAAtB,CAAlB,CAAd;;AAIA,MAAMC,YAAN,SAA2BxB,KAAK,CAACyB,SAAjC,CAA2C;AACzCpB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIgB,KAAD,iBACC,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAOD;;AATwC;;AAY3CnB,QAAQ,CAACG,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEgB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEf,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAJF,E,CAMA;AACA;AACA;;AACAH,aAAa,CAACsB,UAAd","sourcesContent":["import React from 'react';\nimport Redux from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Library Code\nfunction createStore (reducer) {\n  // The store should have four parts\n  // 1. The state\n  // 2. Get the state.\n  // 3. Listen to changes on the state.\n  // 4. Update the state\n\n  let state\n  let listeners = []\n\n  const getState = () => state\n\n  const subscribe = (listener) => {\n    listeners.push(listener)\n    return () => {\n      listeners = listeners.filter((l) => l !== listener)\n    }\n  }\n\n  const dispatch = (action) => {\n    state = reducer(state, action)\n    listeners.forEach((listener) => listener())\n  }\n\n  return {\n    getState,\n    subscribe,\n    dispatch,\n  }\n}\nconst store = Redux.createStore(Redux.combineReducers({\n  todos,\n}))\n\nclass ConnectedApp extends React.Component {\n  render() {\n    return (\n      <Context.Consumer>\n        {(store) => (\n          <App store={store} />\n        )}\n      </Context.Consumer>\n    )\n  }\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedApp />\n  </Provider>,\n  document.getElementById('app')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}